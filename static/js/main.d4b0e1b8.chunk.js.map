{"version":3,"sources":["ThemeContext.js","Navbar.js","SearchParams.js","CountryCard.js","Countries.js","DetailsData.js","Details.js","ButtonUp.js","App.js","index.js"],"names":["ThemeContext","React","createContext","ThemeUpdateContext","DataContext","useTheme","useContext","useCountriesData","DataProvider","children","getTheme","JSON","parse","localStorage","getItem","useState","darkTheme","setDarkTheme","countries","setCountries","Provider","value","setItem","prevTheme","Navbar","toggleTheme","NavBar","className","onClick","icon","faMoon","styled","nav","SearchParams","countriesCoppy","setCountriesCoppy","populationNumber","setPopulationNumber","open","setOpen","selection","setSelection","useEffect","filterCountries","item","length","tempArr","map","tempC","country","region","push","InputContainer","InputDiv","faSearch","type","onChange","e","target","filter","name","toLowerCase","includes","filterCountriesHandler","placeholder","FilterContainer","id","min","max","onMouseUp","population","toString","replace","populationFilter","DropdownContainer","tabIndex","role","some","current","console","log","index","indexOf","splice","handleOnChange","div","CountryCard","to","style","textDecoration","CountryCardContainer","CardImageContainer","backgroundImage","flags","svg","CountryDescription","capital","Countries","isLoading","setLoading","maxNumber","setMaxNumber","getAllCountries","window","addEventListener","handleScroll","a","fetch","response","json","data","loading","innerHeight","documentElement","scrollTop","scrollHeight","prevNumber","minHeight","display","alignItems","justifyContent","animate","y","initial","transition","ease","duration","exit","opacity","CountriesContainer","slice","uuidv4","ButtonContainer","motion","section","DetailsData","Span","span","Details","params","useParams","countryData","setCountryData","navigate","useNavigate","getCountryData","checkNeighbour","DetailsSection","faArrowLeft","DetailsContainer","ImageContainer","flag","nativeName","subregion","topLevelDomain","domain","currencies","currency","languages","language","borders","border","CountryBorder","button","ButtonUp","visible","setVisible","scrolled","document","Button","scrollTo","top","faArrowCircleUp","App","location","useLocation","AnimatePresence","exact","path","element","key","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4b0e1b8.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\n//Creating Contexts(for the current theme, to change the theme and get all the current countries data)\r\nconst ThemeContext = React.createContext();\r\nconst ThemeUpdateContext = React.createContext();\r\nconst DataContext = React.createContext();\r\n\r\nexport function useTheme() {\r\n  return useContext(ThemeContext);\r\n}\r\nexport function useThemeUpdate() {\r\n  return useContext(ThemeUpdateContext);\r\n}\r\nexport function useCountriesData() {\r\n  return useContext(DataContext);\r\n}\r\n\r\n//Exporting function DataProvider that returns the contexts,providers with values so that App.js looks cleaner\r\nexport function DataProvider({ children }) {\r\n  const getTheme = JSON.parse(localStorage.getItem(\"darkTheme\"));\r\n  const [darkTheme, setDarkTheme] = useState(getTheme);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const toggleTheme = () => {\r\n    localStorage.setItem(\"darkTheme\", !darkTheme);\r\n    setDarkTheme((prevTheme) => !prevTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={darkTheme}>\r\n      <DataContext.Provider value={{ countries, setCountries }}>\r\n        <ThemeUpdateContext.Provider value={toggleTheme}>\r\n          {children}\r\n        </ThemeUpdateContext.Provider>\r\n      </DataContext.Provider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme, useThemeUpdate } from \"./ThemeContext\";\r\n\r\nconst Navbar = () => {\r\n  const darkTheme = useTheme();\r\n  const toggleTheme = useThemeUpdate();\r\n\r\n  return (\r\n    <NavBar\r\n      className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n    >\r\n      <div>\r\n        <h2>Where in the world?</h2>\r\n        <button\r\n          onClick={() => toggleTheme()}\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          <FontAwesomeIcon icon={faMoon} />\r\n          Dark Mode\r\n        </button>\r\n      </div>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst NavBar = styled.nav`\r\n  position: relative;\r\n  height: 10vh;\r\n  width: 100%;\r\n  box-shadow: 0px 12px 15px -15px hsl(0, 0%, 0%);\r\n  z-index: 2;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 90%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    button {\r\n      height: 4rem;\r\n      width: auto;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 1.2rem;\r\n      background: none;\r\n      border: none;\r\n      img {\r\n        height: 1rem;\r\n        margin: 0 0.2rem;\r\n        width: 1rem;\r\n      }\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme, useCountriesData } from \"./ThemeContext\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst SearchParams = ({ countriesCoppy, setCountriesCoppy }) => {\r\n  const items = [\r\n    { id: 1, value: \"Africa\" },\r\n    { id: 2, value: \"Americas\" },\r\n    { id: 3, value: \"Asia\" },\r\n    { id: 4, value: \"Europe\" },\r\n    { id: 5, value: \"Oceania\" },\r\n  ];\r\n  //Getting the theme from the context\r\n  const darkTheme = useTheme();\r\n  const { countries } = useCountriesData();\r\n  const [populationNumber, setPopulationNumber] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [selection, setSelection] = useState([]);\r\n\r\n  useEffect(() => {}, [selection, setSelection]);\r\n\r\n  //Function handler for filtering out arrays when user searchs for a particular country\r\n  const filterCountriesHandler = (e) => {\r\n    if (!e.target.value) {\r\n      setCountriesCoppy([...countries]);\r\n    } else {\r\n      setCountriesCoppy(\r\n        countriesCoppy.filter((country) =>\r\n          country.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  //Filter by population number\r\n  const populationFilter = (e) => {\r\n    setCountriesCoppy(\r\n      countriesCoppy.filter((country) => country.population < e.target.value)\r\n    );\r\n    let population = e.target.value\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    setPopulationNumber(population);\r\n  };\r\n\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const handleOnChange = (item) => {\r\n    if (!selection.some((current) => current.id === item.id)) {\r\n      selection.push(item);\r\n      console.log(true);\r\n      //setSelection([...selection, item]);\r\n    } else {\r\n      console.log(false);\r\n      let index = selection.indexOf(item);\r\n      selection.splice(index, 1);\r\n      // let selectionAfterRemoval = selection;\r\n      // selectionAfterRemoval = selectionAfterRemoval.filter(\r\n      //   (current) => current.id !== item.id\r\n      // );\r\n      // setSelection([...selectionAfterRemoval]);\r\n    }\r\n    filterCountries(item);\r\n  };\r\n\r\n  //Select Region and display countries from that region\r\n  const filterCountries = (item) => {\r\n    if (selection.length === 0) {\r\n      setCountriesCoppy(() => [...countries]);\r\n    } else {\r\n      let tempArr = [];\r\n      selection.map((tempC) => {\r\n        countries.map((country) => {\r\n          if (tempC.value === country.region) {\r\n            tempArr.push(country);\r\n          }\r\n        });\r\n      });\r\n      setCountriesCoppy([...tempArr]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer\r\n      className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n    >\r\n      <InputDiv\r\n        className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faSearch}\r\n          className={`search-icon ${\r\n            darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n          }`}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => filterCountriesHandler(e)}\r\n          placeholder=\"Search for a country...\"\r\n          className={\r\n            darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n          }\r\n        />\r\n      </InputDiv>\r\n      <FilterContainer>\r\n        <div>\r\n          <p>Filter by population number:</p>\r\n          <input\r\n            type=\"range\"\r\n            name=\"population\"\r\n            id=\"population-range\"\r\n            min=\"500\"\r\n            max=\"1402112000\"\r\n            onMouseUp={(e) => populationFilter(e)}\r\n          />\r\n          <p>{populationNumber}</p>\r\n        </div>\r\n        <DropdownContainer\r\n          data-control=\"checkbox-dropdown\"\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          className={`dropdown ${\r\n            darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n          }`}\r\n        >\r\n          <label className=\"dropdown-label\" onClick={() => toggle(!open)}>\r\n            Select Region\r\n          </label>\r\n          {open && (\r\n            <div\r\n              className={`dropdown-list ${\r\n                darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n              }`}\r\n            >\r\n              {items.map((item) => (\r\n                <label key={item.id} className=\"dropdown-option\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"dropdown-group\"\r\n                    value={item.value}\r\n                    onClick={() => handleOnChange(item)}\r\n                  />\r\n                  {item.value}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </DropdownContainer>\r\n      </FilterContainer>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default SearchParams;\r\n\r\nconst InputContainer = styled.div`\r\n    position:relative;\r\n    width:100%:\r\n    height:15rem;\r\n    padding:2rem 5%;\r\n    color: hsl(0, 0%, 52%);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    select{\r\n      width:12rem;\r\n      height:3rem;\r\n      border:none;\r\n      box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n      font-size:1rem;\r\n      &:hover{\r\n        cursor:pointer;\r\n      }\r\n    }\r\n    @media only screen and (max-width:680px){\r\n      flex-direction:column;\r\n      gap:2rem;\r\n    }\r\n`;\r\nconst InputDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 26rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  border-radius: 0.4rem;\r\n  @media only screen and (max-width: 430px) {\r\n    width: 20rem;\r\n    input {\r\n      width: 12rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 330px) {\r\n    width: 16rem;\r\n    input {\r\n      width: 9rem;\r\n    }\r\n  }\r\n  input {\r\n    height: 3rem;\r\n    width: 18rem;\r\n    border: none;\r\n    border-top-right-radius: 0.4rem;\r\n    border-bottom-right-radius: 0.4rem;\r\n    padding-left: 1rem;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 30%;\r\n  div {\r\n    padding: 0 2rem;\r\n    input {\r\n      width: 18rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DropdownContainer = styled.div`\r\n  width: 12rem;\r\n  height: 3rem;\r\n  border: none;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  font-size: 1rem;\r\n  z-index: 9999;\r\n  position: relative;\r\n\r\n  .dropdown-label {\r\n    position: absolute;\r\n    top: 0.75rem;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .dropdown-list {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 3rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .dropdown-option {\r\n    padding: 1rem 0;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    align-items: space-around;\r\n  }\r\n  @media only screen and (max-width: 680px) {\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CountryCard = ({ country }) => {\r\n  //Formating numbers from 1000000 to 1,000,000\r\n  let populationNumber = country.population\r\n    .toString()\r\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  let id = country.name;\r\n  const darkTheme = useTheme();\r\n\r\n  return (\r\n    <Link to={`/details/${id}`} style={{ textDecoration: \"none\" }}>\r\n      <CountryCardContainer\r\n        className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      >\r\n        <CardImageContainer\r\n          style={{ backgroundImage: `url(${country.flags.svg})` }}\r\n        ></CardImageContainer>\r\n        <CountryDescription>\r\n          <h2>{country.name}</h2>\r\n          <p>\r\n            <span>Population:</span>\r\n            {populationNumber}\r\n          </p>\r\n          <p>\r\n            <span>Region:</span>\r\n            {country.region}\r\n          </p>\r\n          <p>\r\n            <span>Capital:</span>\r\n            {country.capital}\r\n          </p>\r\n        </CountryDescription>\r\n      </CountryCardContainer>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n\r\nconst CountryCardContainer = styled.div`\r\n  height: 25rem;\r\n  width: 20rem;\r\n  border-radius: 0.2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  @media only screen and (max-width: 330px) {\r\n    width: 16rem;\r\n    height: 23rem;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\nconst CardImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 12rem;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst CountryDescription = styled.div`\r\n  height: 13rem;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  span {\r\n    letter-spacing: 0.1rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchParams from \"./SearchParams\";\r\nimport { motion } from \"framer-motion\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { useTheme, useCountriesData } from \"./ThemeContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Countries() {\r\n  //Getting from Context the function that sets the country array\r\n  const { setCountries } = useCountriesData();\r\n  //DarkTheme fron Context\r\n  const darkTheme = useTheme();\r\n  //Making a coppy of the initial countries array to filter and change data\r\n  const [countriesCoppy, setCountriesCoppy] = useState([]);\r\n  //Loading state\r\n  const [isLoading, setLoading] = useState(true);\r\n  //Maximum nuber of items\r\n  const [maxNumber, setMaxNumber] = useState(24);\r\n\r\n  //On component render get data from API\r\n  useEffect(() => {\r\n    getAllCountries();\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  //Function that fetches data from the api\r\n  const getAllCountries = async () => {\r\n    let response = await fetch(\"https://restcountries.com/v2/all\");\r\n    let data = await response.json();\r\n    setCountries(() => [...data]);\r\n    setCountriesCoppy(() => [...data]);\r\n    setLoading((loading) => !loading);\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    if (\r\n      window.innerHeight + e.target.documentElement.scrollTop + 1 >=\r\n      e.target.documentElement.scrollHeight\r\n    ) {\r\n      setMaxNumber((prevNumber) => prevNumber + 24);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: \"90vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n      >\r\n        <h1>Loading...</h1>\r\n        <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div\r\n          animate={{ y: 0 }}\r\n          initial={{ y: \"100vw\" }}\r\n          transition={{ ease: \"easeIn\", duration: 1.5 }}\r\n          exit={{\r\n            opacity: 0,\r\n            y: \"100vw\",\r\n            transition: { duration: 1.5 },\r\n          }}\r\n          key=\"countries-container\"\r\n        >\r\n          <SearchParams\r\n            countriesCoppy={countriesCoppy}\r\n            setCountriesCoppy={setCountriesCoppy}\r\n          />\r\n\r\n          <CountriesContainer\r\n            className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n          >\r\n            {countriesCoppy.length > 0 &&\r\n              countriesCoppy.slice(0, maxNumber).map((country) => {\r\n                return <CountryCard country={country} key={uuidv4()} />;\r\n              })}\r\n          </CountriesContainer>\r\n        </div>\r\n        <ButtonContainer\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          <button\r\n            onClick={() => setMaxNumber(maxNumber + 24)}\r\n            className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n          >\r\n            Show More...\r\n          </button>\r\n        </ButtonContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n\r\nconst CountriesContainer = styled(motion.section)`\r\n  min-height: 100vh;\r\n  padding: 2rem 5% 0 5%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  gap: 2rem;\r\n  flex-wrap: wrap;\r\n  @media only screen and (max-width: 1135px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 5%;\r\n  button {\r\n    border: none;\r\n    font-size: 2rem;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailsData = ({ name, data }) => {\r\n  return (\r\n    <p>\r\n      <Span>{name}:</Span>\r\n      {data}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default DetailsData;\r\n\r\nconst Span = styled.span`\r\n  font-weight: 600;\r\n  margin: 0.2rem 0;\r\n  text-decoration: underline;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DetailsData from \"./DetailsData\";\r\n\r\nconst Details = () => {\r\n  //getting params from url to display specific country\r\n  const params = useParams().id.toLowerCase();\r\n  const [countryData, setCountryData] = useState([]);\r\n  const darkTheme = useTheme();\r\n  const [isLoading, setLoading] = useState(true);\r\n  let navigate = useNavigate();\r\n\r\n  //fething data from api\r\n  useEffect(() => {\r\n    getCountryData();\r\n  }, []);\r\n  let populationNumber;\r\n  const getCountryData = async () => {\r\n    let response = await fetch(`https://restcountries.com/v2/name/${params}`);\r\n    let data = await response.json();\r\n    setCountryData(() => [...data]);\r\n    if (countryData.length > 0) {\r\n      populationNumber = countryData[0].population\r\n        .toString()\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    setLoading((loading) => !loading);\r\n  };\r\n\r\n  const checkNeighbour = async (country) => {\r\n    let response = await fetch(\r\n      `https://restcountries.com/v2/alpha?codes=${country}`\r\n    );\r\n    console.log(country);\r\n    let data = await response.json();\r\n    setCountryData(() => [...data]);\r\n    navigate(`/details/${country}`);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: \"90vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n      >\r\n        <h1>Loading...</h1>\r\n        <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      countryData.length > 0 && (\r\n        <DetailsSection\r\n          key=\"details-section\"\r\n          exit={{ opacity: 0 }}\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          <ButtonContainer>\r\n            <Link to=\"/countries/\">\r\n              <button\r\n                className={\r\n                  darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n                Go Back\r\n              </button>\r\n            </Link>\r\n          </ButtonContainer>\r\n          <DetailsContainer>\r\n            <ImageContainer\r\n              style={{ backgroundImage: `url(${countryData[0].flag})` }}\r\n            ></ImageContainer>\r\n            <CountryDescription>\r\n              <h1>{countryData[0].name}</h1>\r\n              <div>\r\n                <DetailsData\r\n                  name=\"Native-name\"\r\n                  data={countryData[0].nativeName}\r\n                />\r\n\r\n                <DetailsData name=\"Population\" data={populationNumber} />\r\n                <DetailsData name=\"Region\" data={countryData[0].region} />\r\n                <DetailsData\r\n                  name=\"Sub Region\"\r\n                  data={countryData[0].subregion}\r\n                />\r\n                <DetailsData name=\"Capital\" data={countryData[0].capital} />\r\n\r\n                <p>\r\n                  <Span>Top Level Domain: </Span>\r\n                  {countryData[0].topLevelDomain.map((domain) => {\r\n                    return <span key={domain}>{domain}</span>;\r\n                  })}\r\n                </p>\r\n                <p>\r\n                  <Span>Currencies:</Span>\r\n                  {countryData[0].currencies &&\r\n                    countryData[0].currencies.map((currency) => {\r\n                      return <span key={currency.name}>{currency.name}; </span>;\r\n                    })}\r\n                </p>\r\n                <p>\r\n                  <Span>Languages:</Span>\r\n                  {countryData[0].languages.map((language) => {\r\n                    return <span key={language.name}>{language.name} </span>;\r\n                  })}\r\n                </p>\r\n              </div>\r\n              <ul>\r\n                <p>Border Countries:</p>\r\n                {countryData[0].borders ? (\r\n                  countryData[0].borders.map((border) => {\r\n                    return (\r\n                      <CountryBorder\r\n                        onClick={() => checkNeighbour(border)}\r\n                        key={border}\r\n                      >\r\n                        <Link to={`/details/${border}`}>{border}</Link>\r\n                      </CountryBorder>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <p>This country has no borders.</p>\r\n                )}\r\n              </ul>\r\n            </CountryDescription>\r\n          </DetailsContainer>\r\n        </DetailsSection>\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport default Details;\r\n\r\nconst DetailsSection = styled(motion.section)`\r\n  min-height: 90vh;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  height: 8rem;\r\n  width: 100%;\r\n  padding: 0 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  button {\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    background: none;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    border-radius: 0.4rem;\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\nconst DetailsContainer = styled(motion.div)`\r\n  height: 70vh;\r\n  width: 100%;\r\n  padding: 2rem 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst ImageContainer = styled.div`\r\n  width: 40%;\r\n  height: 25rem;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 50%;\r\n    height: 30rem;\r\n  }\r\n`;\r\nconst CountryDescription = styled.div`\r\n  width: 60%;\r\n  height: 25rem;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n  h1 {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  div {\r\n    display: grid;\r\n    width: 100%;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    margin: 0.5rem 0;\r\n    p {\r\n      padding: 0.25rem;\r\n    }\r\n    @media only screen and (max-width: 1024px) {\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    @media only screen and (max-width: 530px) {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n  ul {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.5em;\r\n    list-style-type: none;\r\n    margin: 0.5rem 0;\r\n    p {\r\n      padding: 0.2rem 0;\r\n      font-weight: 600;\r\n      font-size: 1.3rem;\r\n    }\r\n    li {\r\n      padding: 0.2rem 1rem;\r\n      margin: 0 0.2rem;\r\n      border: 1px solid hsl(0, 0%, 52%);\r\n      border-radius: 0.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-weight: 600;\r\n  margin: 0.2rem 0;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst CountryBorder = styled.button`\r\n  padding: 0.2rem 1rem;\r\n  margin: 0 0.2rem;\r\n  border: 1px solid hsl(0, 0%, 52%);\r\n  border-radius: 0.4rem;\r\n  background-color: none;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport { faArrowCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nconst ButtonUp = () => {\r\n  const darkTheme = useTheme();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300) {\r\n      setVisible(true);\r\n    } else if (scrolled <= 300) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n    });\r\n  };\r\n  window.addEventListener(\"scroll\", toggleVisible);\r\n  return (\r\n    <Button\r\n      className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      style={{ display: visible ? \"block\" : \"none\" }}\r\n      onClick={() => scrollToTop()}\r\n    >\r\n      <FontAwesomeIcon icon={faArrowCircleUp} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonUp;\r\n\r\nconst Button = styled(motion.button)`\r\n  position: fixed;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  background: none;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n  transition: transform 0.3s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n","import { DataProvider } from \"./ThemeContext\";\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport Navbar from \"./Navbar\";\nimport Countries from \"./Countries\";\nimport Details from \"./Details\";\nimport ButtonUp from \"./ButtonUp\";\n\nfunction App() {\n  const location = useLocation();\n  return (\n    <DataProvider>\n      <AnimatePresence>\n        <Navbar key=\"navbar\" />\n        <Routes>\n          <Route\n            location={location}\n            key={location.key}\n            exact\n            path=\"/countries/\"\n            element={<Countries />}\n          />\n          <Route\n            exact\n            path=\"/details/:id/\"\n            element={<Details />}\n            key=\"details-container\"\n          />\n        </Routes>\n        <ButtonUp />\n      </AnimatePresence>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}