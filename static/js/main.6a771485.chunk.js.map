{"version":3,"sources":["ThemeContext.js","Navbar.js","SearchParams.js","CountryCard.js","Countries.js","DetailsData.js","Details.js","ButtonUp.js","App.js","index.js"],"names":["ThemeContext","React","createContext","ThemeUpdateContext","DataContext","useTheme","useContext","useCountriesData","DataProvider","children","getTheme","JSON","parse","localStorage","getItem","useState","darkTheme","setDarkTheme","countries","setCountries","Provider","value","setItem","prevTheme","Navbar","toggleTheme","NavBar","className","onClick","icon","faMoon","styled","nav","SearchParams","countriesCoppy","setCountriesCoppy","InputContainer","InputDiv","faSearch","type","onChange","e","preventDefault","target","filter","country","name","toLowerCase","includes","filterCountriesHandler","placeholder","region","handleChange","id","div","CountryCard","populationNumber","population","toString","replace","to","style","textDecoration","CountryCardContainer","CardImageContainer","backgroundImage","flags","svg","CountryDescription","capital","Countries","isLoading","setLoading","useEffect","getAllCountries","a","fetch","response","json","data","loading","minHeight","display","alignItems","justifyContent","animate","y","initial","transition","ease","duration","exit","opacity","CountriesContainer","length","map","numericCode","motion","section","DetailsData","Span","span","Details","params","useParams","countryData","setCountryData","getCountryData","DetailsSection","ButtonContainer","faArrowLeft","DetailsContainer","ImageContainer","flag","nativeName","subregion","topLevelDomain","domain","currencies","currency","languages","language","borders","border","ButtonUp","visible","setVisible","window","addEventListener","scrolled","document","documentElement","scrollTop","Button","scrollTo","top","faArrowCircleUp","button","App","location","useLocation","AnimatePresence","exact","path","element","key","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a771485.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\n//Creating Contexts(for the current theme, to change the theme and get all the current countries data)\r\nconst ThemeContext = React.createContext();\r\nconst ThemeUpdateContext = React.createContext();\r\nconst DataContext = React.createContext();\r\n\r\nexport function useTheme() {\r\n  return useContext(ThemeContext);\r\n}\r\nexport function useThemeUpdate() {\r\n  return useContext(ThemeUpdateContext);\r\n}\r\nexport function useCountriesData() {\r\n  return useContext(DataContext);\r\n}\r\n\r\n//Exporting function DataProvider that returns the contexts,providers with values so that App.js looks cleaner\r\nexport function DataProvider({ children }) {\r\n  const getTheme = JSON.parse(localStorage.getItem(\"darkTheme\"));\r\n  const [darkTheme, setDarkTheme] = useState(getTheme);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const toggleTheme = () => {\r\n    localStorage.setItem(\"darkTheme\", !darkTheme);\r\n    setDarkTheme((prevTheme) => !prevTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={darkTheme}>\r\n      <DataContext.Provider value={{ countries, setCountries }}>\r\n        <ThemeUpdateContext.Provider value={toggleTheme}>\r\n          {children}\r\n        </ThemeUpdateContext.Provider>\r\n      </DataContext.Provider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme, useThemeUpdate } from \"./ThemeContext\";\r\n\r\nconst Navbar = () => {\r\n  const darkTheme = useTheme();\r\n  const toggleTheme = useThemeUpdate();\r\n\r\n  return (\r\n    <NavBar\r\n      className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n    >\r\n      <div>\r\n        <h2>Where in the world?</h2>\r\n        <button\r\n          onClick={() => toggleTheme()}\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          <FontAwesomeIcon icon={faMoon} />\r\n          Dark Mode\r\n        </button>\r\n      </div>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst NavBar = styled.nav`\r\n  position: relative;\r\n  height: 10vh;\r\n  width: 100%;\r\n  box-shadow: 0px 12px 15px -15px hsl(0, 0%, 0%);\r\n  z-index: 2;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 90%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    button {\r\n      height: 4rem;\r\n      width: auto;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 1.2rem;\r\n      background: none;\r\n      border: none;\r\n      img {\r\n        height: 1rem;\r\n        margin: 0 0.2rem;\r\n        width: 1rem;\r\n      }\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme, useCountriesData } from \"./ThemeContext\";\r\n\r\nconst SearchParams = ({ countriesCoppy, setCountriesCoppy }) => {\r\n  //Getting the theme from the context\r\n  const darkTheme = useTheme();\r\n  const { countries } = useCountriesData();\r\n\r\n  //Function handler for filtering out arrays when user searchs for a particular country\r\n  const filterCountriesHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!e.target.value) {\r\n      setCountriesCoppy([...countries]);\r\n    } else {\r\n      setCountriesCoppy(\r\n        countries.filter((country) =>\r\n          country.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n  //Select Region and display countries from that region\r\n  const handleChange = (e) => {\r\n    if (!e.target.value) {\r\n      setCountriesCoppy([...countries]);\r\n    } else {\r\n      setCountriesCoppy(\r\n        countries.filter((country) => country.region === e.target.value)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer\r\n      className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n    >\r\n      <InputDiv\r\n        className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faSearch}\r\n          className={`search-icon ${\r\n            darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n          }`}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => filterCountriesHandler(e)}\r\n          placeholder=\"Search for a country...\"\r\n          className={\r\n            darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n          }\r\n        />\r\n      </InputDiv>\r\n      <select\r\n        onChange={(e) => handleChange(e)}\r\n        id=\"select-region\"\r\n        className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      >\r\n        <option value=\"\">Filter by Region</option>\r\n        <option value=\"Africa\">Africa</option>\r\n        <option value=\"Americas\">America</option>\r\n        <option value=\"Asia\">Asia</option>\r\n        <option value=\"Europe\">Europe</option>\r\n        <option value=\"Oceania\">Oceania</option>\r\n      </select>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default SearchParams;\r\n\r\nconst InputContainer = styled.div`\r\n    position:relative;\r\n    width:100%:\r\n    height:15rem;\r\n    padding:2rem 5%;\r\n    color: hsl(0, 0%, 52%);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    \r\n    }\r\n\r\n    select{\r\n      width:12rem;\r\n      height:3rem;\r\n      border:none;\r\n      box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n      font-size:1rem;\r\n      &:hover{\r\n        cursor:pointer;\r\n      }\r\n      option{\r\n       \r\n        \r\n      }\r\n    }\r\n    @media only screen and (max-width:680px){\r\n      flex-direction:column;\r\n      gap:2rem;\r\n    }\r\n`;\r\nconst InputDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 26rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  border-radius: 0.4rem;\r\n  @media only screen and (max-width: 430px) {\r\n    width: 20rem;\r\n    input {\r\n      width: 12rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 330px) {\r\n    width: 16rem;\r\n    input {\r\n      width: 9rem;\r\n    }\r\n  }\r\n  input {\r\n    height: 3rem;\r\n    width: 18rem;\r\n    border: none;\r\n    border-top-right-radius: 0.4rem;\r\n    border-bottom-right-radius: 0.4rem;\r\n    padding-left: 1rem;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CountryCard = ({ country }) => {\r\n  //Formating numbers from 1000000 to 1,000,000\r\n  let populationNumber = country.population\r\n    .toString()\r\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  let id = country.name;\r\n  const darkTheme = useTheme();\r\n\r\n  return (\r\n    <Link to={`/details/${id}`} style={{ textDecoration: \"none\" }}>\r\n      <CountryCardContainer\r\n        className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      >\r\n        <CardImageContainer\r\n          style={{ backgroundImage: `url(${country.flags.svg})` }}\r\n        ></CardImageContainer>\r\n        <CountryDescription>\r\n          <h2>{country.name}</h2>\r\n          <p>\r\n            <span>Population:</span>\r\n            {populationNumber}\r\n          </p>\r\n          <p>\r\n            <span>Region:</span>\r\n            {country.region}\r\n          </p>\r\n          <p>\r\n            <span>Capital:</span>\r\n            {country.capital}\r\n          </p>\r\n        </CountryDescription>\r\n      </CountryCardContainer>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n\r\nconst CountryCardContainer = styled.div`\r\n  height: 25rem;\r\n  width: 20rem;\r\n  border-radius: 0.2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  @media only screen and (max-width: 330px) {\r\n    width: 16rem;\r\n    height: 23rem;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\nconst CardImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 12rem;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst CountryDescription = styled.div`\r\n  height: 13rem;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  span {\r\n    letter-spacing: 0.1rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchParams from \"./SearchParams\";\r\nimport { motion } from \"framer-motion\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { useTheme, useCountriesData } from \"./ThemeContext\";\r\n\r\nconst Countries = () => {\r\n  //Getting from Context the function that sets the country array\r\n  const { setCountries } = useCountriesData();\r\n  //DarkTheme fron Context\r\n  const darkTheme = useTheme();\r\n  //Making a coppy of the initial countries array to filter and change data\r\n  const [countriesCoppy, setCountriesCoppy] = useState([]);\r\n  //Loagind state\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  //On component render get data from API\r\n  useEffect(() => {\r\n    getAllCountries();\r\n  }, []);\r\n  //Function that fetches data from the api\r\n  const getAllCountries = async () => {\r\n    let response = await fetch(\"https://restcountries.com/v2/all\");\r\n    let data = await response.json();\r\n    setCountries(() => [...data]);\r\n    setCountriesCoppy(() => [...data]);\r\n    setLoading((loading) => !loading);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: \"90vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n      >\r\n        <h1>Loading...</h1>\r\n        <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        animate={{ y: 0 }}\r\n        initial={{ y: \"100vw\" }}\r\n        transition={{ ease: \"easeIn\", duration: 1.5 }}\r\n        exit={{\r\n          opacity: 0,\r\n          y: \"100vw\",\r\n          transition: { duration: 1.5 },\r\n        }}\r\n        key=\"countries-container\"\r\n      >\r\n        <SearchParams\r\n          countriesCoppy={countriesCoppy}\r\n          setCountriesCoppy={setCountriesCoppy}\r\n        />\r\n\r\n        <CountriesContainer\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          {countriesCoppy.length > 0 &&\r\n            countriesCoppy.map((country) => {\r\n              return (\r\n                <CountryCard country={country} key={country.numericCode} />\r\n              );\r\n            })}\r\n        </CountriesContainer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Countries;\r\n\r\nconst CountriesContainer = styled(motion.section)`\r\n  min-height: 100vh;\r\n  padding: 2rem 5% 0 5%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  gap: 2rem;\r\n  flex-wrap: wrap;\r\n  @media only screen and (max-width: 1135px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailsData = ({ name, data }) => {\r\n  return (\r\n    <p>\r\n      <Span>{name}:</Span>\r\n      {data}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default DetailsData;\r\n\r\nconst Span = styled.span`\r\n  font-weight: 600;\r\n  margin: 0.2rem 0;\r\n  text-decoration: underline;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DetailsData from \"./DetailsData\";\r\n\r\nconst Details = () => {\r\n  //getting params from url to display specific country\r\n  const params = useParams().id.toLowerCase();\r\n  const [countryData, setCountryData] = useState([]);\r\n  const darkTheme = useTheme();\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  //fething data from api\r\n  useEffect(() => {\r\n    getCountryData();\r\n  }, []);\r\n  let populationNumber;\r\n  const getCountryData = async () => {\r\n    let response = await fetch(`https://restcountries.com/v2/name/${params}`);\r\n    let data = await response.json();\r\n    setCountryData(() => [...data]);\r\n    if (countryData.length > 0) {\r\n      populationNumber = countryData[0].population\r\n        .toString()\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    setLoading((loading) => !loading);\r\n  };\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: \"90vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n      >\r\n        <h1>Loading...</h1>\r\n        <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      countryData.length > 0 && (\r\n        <DetailsSection\r\n          key=\"details-section\"\r\n          exit={{ opacity: 0 }}\r\n          className={darkTheme ? \"dark-theme-class\" : \"light-theme-class\"}\r\n        >\r\n          <ButtonContainer>\r\n            <Link to=\"/\">\r\n              <button\r\n                className={\r\n                  darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n                Go Back\r\n              </button>\r\n            </Link>\r\n          </ButtonContainer>\r\n          <DetailsContainer>\r\n            <ImageContainer\r\n              style={{ backgroundImage: `url(${countryData[0].flag})` }}\r\n            ></ImageContainer>\r\n            <CountryDescription>\r\n              <h1>{countryData[0].name}</h1>\r\n              <div>\r\n                <DetailsData\r\n                  name=\"Native-name\"\r\n                  data={countryData[0].nativeName}\r\n                />\r\n\r\n                <DetailsData name=\"Population\" data={populationNumber} />\r\n                <DetailsData name=\"Region\" data={countryData[0].region} />\r\n                <DetailsData\r\n                  name=\"Sub Region\"\r\n                  data={countryData[0].subregion}\r\n                />\r\n                <DetailsData name=\"Capital\" data={countryData[0].capital} />\r\n\r\n                <p>\r\n                  <Span>Top Level Domain: </Span>\r\n                  {countryData[0].topLevelDomain.map((domain) => {\r\n                    return <span key={domain}>{domain}</span>;\r\n                  })}\r\n                </p>\r\n                <p>\r\n                  <Span>Currencies:</Span>\r\n                  {countryData[0].currencies &&\r\n                    countryData[0].currencies.map((currency) => {\r\n                      return <span key={currency.name}>{currency.name}; </span>;\r\n                    })}\r\n                </p>\r\n                <p>\r\n                  <Span>Languages:</Span>\r\n                  {countryData[0].languages.map((language) => {\r\n                    return <span key={language.name}>{language.name} </span>;\r\n                  })}\r\n                </p>\r\n              </div>\r\n              <ul>\r\n                <p>Border Countries:</p>\r\n                {countryData[0].borders ? (\r\n                  countryData[0].borders.map((border) => {\r\n                    return <li key={border}>{border}</li>;\r\n                  })\r\n                ) : (\r\n                  <p>This country has no borders.</p>\r\n                )}\r\n              </ul>\r\n            </CountryDescription>\r\n          </DetailsContainer>\r\n        </DetailsSection>\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport default Details;\r\n\r\nconst DetailsSection = styled(motion.section)`\r\n  min-height: 90vh;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  height: 8rem;\r\n  width: 100%;\r\n  padding: 0 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  button {\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    background: none;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    border-radius: 0.4rem;\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\nconst DetailsContainer = styled(motion.div)`\r\n  height: 70vh;\r\n  width: 100%;\r\n  padding: 2rem 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst ImageContainer = styled.div`\r\n  width: 40%;\r\n  height: 25rem;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 50%;\r\n    height: 30rem;\r\n  }\r\n`;\r\nconst CountryDescription = styled.div`\r\n  width: 60%;\r\n  height: 25rem;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n  h1 {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  div {\r\n    display: grid;\r\n    width: 100%;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    margin: 0.5rem 0;\r\n    p {\r\n      padding: 0.25rem;\r\n    }\r\n    @media only screen and (max-width: 1024px) {\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    @media only screen and (max-width: 530px) {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n  ul {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.5em;\r\n    list-style-type: none;\r\n    margin: 0.5rem 0;\r\n    p {\r\n      padding: 0.2rem 0;\r\n      font-weight: 600;\r\n      font-size: 1.3rem;\r\n    }\r\n    li {\r\n      padding: 0.2rem 1rem;\r\n      margin: 0 0.2rem;\r\n      border: 1px solid hsl(0, 0%, 52%);\r\n      border-radius: 0.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-weight: 600;\r\n  margin: 0.2rem 0;\r\n  text-decoration: underline;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport { faArrowCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nconst ButtonUp = () => {\r\n  const darkTheme = useTheme();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300) {\r\n      setVisible(true);\r\n    } else if (scrolled <= 300) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n    });\r\n  };\r\n  window.addEventListener(\"scroll\", toggleVisible);\r\n  return (\r\n    <Button\r\n      className={darkTheme ? \"dark-theme-class-lighter\" : \"light-theme-class\"}\r\n      style={{ display: visible ? \"block\" : \"none\" }}\r\n      onClick={() => scrollToTop()}\r\n    >\r\n      <FontAwesomeIcon icon={faArrowCircleUp} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonUp;\r\n\r\nconst Button = styled(motion.button)`\r\n  position: fixed;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  background: none;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n  transition: transform 0.3s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n","import { DataProvider } from \"./ThemeContext\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport Navbar from \"./Navbar\";\nimport Countries from \"./Countries\";\nimport Details from \"./Details\";\nimport ButtonUp from \"./ButtonUp\";\n\nfunction App() {\n  const location = useLocation();\n  return (\n    <Router>\n      <DataProvider>\n        <AnimatePresence>\n          <Navbar key=\"navbar\" />\n          <Routes location={location} key={location.key}>\n            <Route\n              exact\n              path=\"/countries/\"\n              element={<Countries />}\n              key=\"countries-container\"\n            />\n            <Route\n              exact\n              path=\"/countries/details/:id/\"\n              element={<Details />}\n              key=\"details-container\"\n            />\n          </Routes>\n          <ButtonUp />\n        </AnimatePresence>\n      </DataProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}